DROP VIEW IF EXISTS public.V_ROLES RESTRICT;
DROP VIEW IF EXISTS public.V_ACCOUNT RESTRICT;
DROP TABLE IF EXISTS USER_ROLE;
DROP TABLE IF EXISTS ACCOUNT_ACTION;
DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS CREDENTIAL_VERSION;
DROP TABLE IF EXISTS ACCOUNT_VERSION;

CREATE TABLE ACCOUNT_VERSION (
  ID         SERIAL PRIMARY KEY       NOT NULL,
  ACCOUNT_FK BIGINT                   NOT NULL,
  NAME       VARCHAR(128)             NOT NULL,
  LAST_NAME  VARCHAR(128)             NOT NULL,
  MAIL       VARCHAR(128)             NOT NULL,
  CREATED    TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE CREDENTIAL_VERSION (
  ID         SERIAL PRIMARY KEY       NOT NULL,
  ACCOUNT_FK BIGINT                   NOT NULL,
  PASSWORD   VARCHAR(128)             NOT NULL,
  CREATED    TIMESTAMP WITH TIME ZONE
);
a
CREATE TABLE ACCOUNT (
  ID                    SERIAL PRIMARY KEY,
  USERNAME              VARCHAR(64) UNIQUE,
  ACCOUNT_VERSION_FK    BIGINT REFERENCES ACCOUNT_VERSION (ID),
  CREDENTIAL_VERSION_FK BIGINT REFERENCES CREDENTIAL_VERSION (ID),
  STATUS                VARCHAR(32)              NOT NULL, --APPROVED, LOCKED, DELETED, PENDING
  CREATED               TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE TABLE USER_ROLE (
  ID         SERIAL PRIMARY KEY NOT NULL,
  ACCOUNT_FK BIGINT             NOT NULL REFERENCES ACCOUNT (ID),
  ROLE       VARCHAR(16)        NOT NULL,
  CREATED    TIMESTAMP WITH TIME ZONE
);


-- Types:
-- REGISTRATION_REQUEST,
-- REGISTRATION_CONFIRMATION_PENDING,
-- REGISTRATION_CONFIRMED,
-- REGISTRATION_FAILED,
-- PASSWORD_RESET_REQUEST,
-- PASSWORD_RESET_CONFIRMATION_PENDING,
-- PASSWORD_RESET_CONFIRMED,
-- PASSWORD_RESET_FAILED
CREATE TABLE ACCOUNT_ACTION (
  ID         SERIAL PRIMARY KEY,
  ACCOUNT_FK BIGINT NOT NULL REFERENCES ACCOUNT (ID),
  IP         VARCHAR(32),
  UUID       VARCHAR(64),
  TIME       TIMESTAMP WITH TIME ZONE,
  TYPE       VARCHAR(64),
  CONTEXT    VARCHAR(256)
);

------------------------------------ VIEWS -----------------------------------------

CREATE OR REPLACE VIEW V_ACCOUNT AS
  SELECT
    a.username,
    c.password,
    a.status
  FROM account a, credential_version c
  WHERE
    a.credential_version_fk = c.id
    AND
    a.status = 'APPROVED';



CREATE VIEW V_ROLES AS
  SELECT
    a.username,
    u.role,
    a.status
  FROM account a, user_role u
  WHERE
    a.id = u.account_fk
    AND
    a.status = 'APPROVED';
